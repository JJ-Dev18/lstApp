name: Deploy to VPS

on:
  push:
    branches:
      - main  # Este pipeline se ejecutar√° cuando haya un push en la rama 'main'

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, '[frontend]') || contains(github.event.head_commit.message, '[both]')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up SSH
      run: |
        sudo apt-get update
        sudo apt-get install -y sshpass
        chmod +x ./add_ssh_key.sh
        ./add_ssh_key.sh
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SSH_PASSPHRASE: ${{ secrets.SSH_PASSPHRASE }}

    - name: Copy frontend files to VPS
      env:
        VPS_USER: ${{ secrets.VPS_USER }}
        VPS_HOST: ${{ secrets.VPS_HOST }}
      run: |
        scp -o StrictHostKeyChecking=no -r ./frontend ${VPS_USER}@${VPS_HOST}:/tmp/frontend
        ssh -o StrictHostKeyChecking=no ${VPS_USER}@${VPS_HOST} "sudo mv /tmp/frontend /var/www/lstapp/"
    - name: Copy docker-compose.yml to VPS
      env:
        VPS_USER: ${{ secrets.VPS_USER }}
        VPS_HOST: ${{ secrets.VPS_HOST }}
      run: |
        scp -o StrictHostKeyChecking=no ./docker-compose.yml ${VPS_USER}@${VPS_HOST}:/tmp/docker-compose.yml
        ssh -o StrictHostKeyChecking-no ${VPS_USER}@${VPS_HOST} "sudo mv /tmp/docker-compose.yml /var/www/lstapp/"
    - name: Deploy frontend on VPS
      env:
        VPS_USER: ${{ secrets.VPS_USER }}
        VPS_HOST: ${{ secrets.VPS_HOST }}
      run: |
        ssh -o StrictHostKeyChecking=no ${VPS_USER}@${VPS_HOST} << 'EOF'
        cd /path/to/your/project/on/vps
        docker-compose build frontend
        docker-compose up -d frontend
        EOF

  deploy-backend:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, '[backend]') || contains(github.event.head_commit.message, '[both]')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up SSH
      run: |
        sudo apt-get update
        sudo apt-get install -y sshpass
        chmod +x ./add_ssh_key.sh
        ./add_ssh_key.sh
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SSH_PASSPHRASE: ${{ secrets.SSH_PASSPHRASE }}

    - name: Copy backend files to VPS
      env:
        VPS_USER: ${{ secrets.VPS_USER }}
        VPS_HOST: ${{ secrets.VPS_HOST }}
      run: |
        scp -o StrictHostKeyChecking=no -r ./backend ${VPS_USER}@${VPS_HOST}:/tmp/backend
        ssh -o StrictHostKeyChecking-no ${VPS_USER}@${VPS_HOST} "sudo mv /tmp/backend /var/www/lstapp/"

     - name: Copy docker-compose.yml to VPS
      env:
        VPS_USER: ${{ secrets.VPS_USER }}
        VPS_HOST: ${{ secrets.VPS_HOST }}
      run: |
        scp -o StrictHostKeyChecking=no ./docker-compose.yml ${VPS_USER}@${VPS_HOST}:/tmp/docker-compose.yml
        ssh -o StrictHostKeyChecking-no ${VPS_USER}@${VPS_HOST} "sudo mv /tmp/docker-compose.yml /var/www/lstapp/"
    - name: Deploy backend on VPS
      env:
        VPS_USER: ${{ secrets.VPS_USER }}
        VPS_HOST: ${{ secrets.VPS_HOST }}
      run: |
        ssh -o StrictHostKeyChecking=no ${VPS_USER}@${VPS_HOST} << 'EOF'
        cd /path/to/your/project/on/vps
        docker-compose build backend
        docker-compose up -d backend
        EOF
